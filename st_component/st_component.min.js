class component extends HTMLElement{static{customElements.define("st-component",this)}static#t=["visible","on_visible","on_visible_full","on_hide_full"];static#e=["mutation_list","mutation"];static#s={scroll:(t,e)=>s=>{s.detail=t.scrollHeight>t.clientHeight?t.scrollTop/(t.scrollHeight-t.clientHeight)*100:100,e.call(t,s)}};static#n={0:{url:void 0,method:"POST",events:{on_send_failed:[t=>console.error(t.detail)]}}};static#i(...t){return t.reduce(((t,e)=>({...t,...e,events:{...t.events||{},...e.events||{}}})),{})}static add_state(t,e){e.events&&Object.keys(e.events).forEach((t=>e.events[t]=[].concat(e.events[t]))),component.#n[t]=component.#i(component.#n[0],e)}static add_state_map(t){Object.entries(t).forEach((([t,e])=>{component.add_state(t,e)}))}static delete_state(t){delete component.#n[t]}#o={};#a={};#r=0;#c=null;#h=null;#_(t,e=void 0){this.dispatchEvent(new CustomEvent(t,{detail:e}))}constructor(){super()}connectedCallback(){let t=this.getAttribute("state")??0,e={...component.#n[t],...Object.fromEntries(Array.from(this.attributes).filter((t=>t.name.startsWith("state-"))).map((t=>[t.name.slice(6),t.value])))};new MutationObserver(((s,n)=>{this.childNodes.length&&(this.set_state(t,e),this.#r=t,this.#_("on_attach"),n.disconnect())})).observe(this,{childList:!0})}disconnectedCallback(){this.#_("on_detach"),this.#c&&(this.#c.disconnect(),this.#c=null),this.#h&&(this.#h.disconnect(),this.#h=null)}addEventListener(t,e,s){component.#t.includes(t)&&!this.#c&&(this.#c=new IntersectionObserver((([t],e)=>{let s=t.intersectionRatio,n={ratio:s,observer:e};this.#_("visible",n),0===s?this.#_("on_hide_full",n):1===s?this.#_("on_visible_full",n):this.#_("on_visible",n)}),{root:null,threshold:[0,1]}),this.#c.observe(this)),component.#e.includes(t)&&!this.#h&&(this.#h=new MutationObserver(((t,e)=>{this.#_("mutation_list",{observer:e,mutations_list:t}),t.forEach((t=>this.#_("mutation",{observer:e,mutations:t})))})),this.#h.observe(this,{childList:!0,attributes:!0,subtree:!0})),component.#s[t]&&(e=component.#s[t](this,e));let n=e.name?e:e.bind(this);this.#o[t]||(this.#o[t]=[]),this.#o[t].push(n),super.addEventListener.call(this,t,n,s)}removeEventListener(t,e,s){this.#o[t]=this.#o[t].filter((t=>t!==e)),super.removeEventListener.call(this,t,e,s),!Object.keys(this.#o).some((t=>component.#t.includes(t)))&&this.#c&&(this.#c.disconnect(),this.#c=null),!Object.keys(this.#o).some((t=>component.#e.includes(t)))&&this.#h&&(this.#h.disconnect(),this.#h=null)}add_state(t,e){this.#_("before_state_add",{state_name:t,state_data:e}),e.events&&Object.keys(e.events).forEach((t=>e.events[t]=[].concat(e.events[t]))),this.#a[t]=component.#i(component.#n[0],e),this.#_("on_state_add",{state_name:t,state_data:this.#a[t]})}add_state_map(t){Object.entries(t).forEach((([t,e])=>{this.add_state(t,e)}))}set_state(t,e=null){let[s,n]="string"==typeof t?[t,e]:[0,t];n&&this.add_state(s,n),!this.#a[s]&&component.#n[s]&&this.add_state(s,component.#n[s]),this.#a[s]&&(t=>{this.#_("before_state_set",{state_name:t,state_data:this.#a[t]}),this.#r=t,Object.entries(this.#a[t]).forEach((([t,e])=>{"events"===t?Object.entries(e).forEach((([t,e])=>{(this.#o[t]??[]).forEach((e=>this.removeEventListener(t,e))),e.forEach((e=>this.addEventListener(t,e)))})):this[t]=e})),this.#_("on_state_set",{state_name:t,state_data:this.#a[t]})})(s)}save_state(t=this.#r){this.#_("before_state_save",{state_name:t,state_data:this.#a[t]}),this.#a[t]={...Object.fromEntries(Object.entries(this.#a[this.#r]).map((([t,e])=>[t,this[t]??e]))),events:{...Object.fromEntries(Object.entries(this.#o).map((([t,e])=>[t,e])))}},this.#_("on_state_save",{state_name:t,state_data:this.#a[t]})}send(t={}){let e=!1,s=(t={})=>{e||(this.#_("on_send_failed",t instanceof XMLHttpRequest?{status:t.status,statusText:t.statusText,response:t.responseText}:{status:void 0,statusText:"",response:t}),e=!0)};try{t={url:this.url,method:this.method,data:this.dataset,...t};let e=new XMLHttpRequest;e.onreadystatechange=()=>{if(4===e.readyState)return e.status<200||e.status>=300?s(e):void this.#_("on_send_success",{data:e.responseText,request:e})},e.onerror=s,e.open(t.method,t.url,!0),this.#_("before_send",t),"object"!=typeof t.data||t.data instanceof FormData?e.send(t.data):(e.setRequestHeader("Content-Type","application/json"),e.send(JSON.stringify(t.data))),this.#_("on_send",{detail:t})}catch(t){s(t)}}}